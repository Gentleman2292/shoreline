package com.momentum.impl.modules.exploit.antihunger;

import com.momentum.api.feature.Option;
import com.momentum.api.module.Module;
import com.momentum.api.module.ModuleCategory;
import net.minecraft.network.play.client.CPacketEntityAction;
import net.minecraft.network.play.client.CPacketEntityAction.Action;

/**
 * @author linus
 * @since 02/20/2023
 */
public class AntiHungerModule extends Module {

    // negation options
    public final Option<Boolean> sprintOption =
            new Option<>("Sprint", "Cancels sprint packets", true);
    public final Option<Boolean> groundOption =
            new Option<>("Ground", "Spoofs ground state", true);

    // listeners
    public final OutboundPacketListener outboundPacketListener =
            new OutboundPacketListener(this);

    // previous sprint state
    public boolean psprint;

    public AntiHungerModule() {
        super("AntiHunger", new String[] {"NoHunger"}, "Negates hunger loss", ModuleCategory.EXPLOITS);

        // options
        associate(
                sprintOption,
                groundOption,
                bind,
                drawn
        );

        // listeners
        associate(
                outboundPacketListener
        );
    }

    @Override
    public void onEnable() {
        super.onEnable();

        // if we are sprinting, we need to stop sprinting
        if (mc.player.isSprinting() && sprintOption.getVal()) {

            // send stop sprint packet
            psprint = true;
            mc.player.connection.sendPacket(new CPacketEntityAction(mc.player, Action.STOP_SPRINTING));
        }
    }

    @Override
    public void onDisable() {
        super.onDisable();

        // reset our sprint state
        if (psprint) {

            // send start sprint packet
            psprint = false;
            mc.player.connection.sendPacket(new CPacketEntityAction(mc.player, Action.START_SPRINTING));
        }
    }
}
